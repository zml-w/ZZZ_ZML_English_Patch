{
    "NODE_DISPLAY_NAME_MAPPINGS": {
        "ZML_LoRA加载器": "ZML_LoRA Loader",
        "ZML_LoRA加载器（仅模型）": "ZML_LoRA Loader (Model Only)",
        "ZML_LoRA加载器_五": "ZML_LoRA Loader_Five",
        "ZML_解析LoRA元数据": "ZML_Parse LoRA Metadata",
        "ZML_强力lora加载器": "ZML_Power LoRA Loader",
        "ZML_名称加载lora": "ZML_Load LoRA by Name"
    },
    "UI_TEXT": {
        "你好~\n加载lora的节点是基于ComfyUI-Custom-Scripts里的lora节点进行二次修改的，GitHub链接：https://github.com/pythongosssss/ComfyUI-Custom-Scripts。\n感谢作者的付出~\n在lora目录创建一个子文件夹‘zml’，里面放上和lora文件同名的图片、txt、log文件即可使用节点读取对应信息，选择lora时鼠标悬停可以预览图片，且会根据文件夹来分类lora文件。\n文件夹结构应该是这样的：lora的根目录（例如ComfyUI/models/loras）下，有一个lora文件（例如my_lora_dir/my_lora.safetensors），在my_lora_dir下会有一个名为‘zml’的子文件夹，里面放着my_lora.png、my_lora.txt、my_lora.log。\n这真是一个伟大的创意，再次感谢原作者的付出。": "Hello~\nThis LoRA loader node is a modification based on the lora node from ComfyUI-Custom-Scripts, GitHub: https://github.com/pythongosssss/ComfyUI-Custom-Scripts.\nThanks to the original author!\nTo use, create a 'zml' subfolder in your lora directory. Place identically named images, .txt, and .log files inside to read their info. You can preview images by hovering over the LoRA selection.\nDirectory structure example: A lora file at '.../loras/my_lora_dir/my_lora.safetensors' should have its assets in '.../loras/my_lora_dir/zml/my_lora.png', etc.\nA great idea, thanks again to the original author.",
        "你好~\n加载lora的节点是基于ComfyUI-Custom-Scripts里的lora节点进行二次修改的，GitHub链接：https://github.com/pythongosssss/ComfyUI-Custom-Scripts。\n感谢作者的付出~\n在lora目录创建一个子文件夹‘zml’，里面放上和lora文件同名的图片、txt、log文件即可使用节点读取对应信息，选择lora时鼠标悬停可以预览图片，且会根据文件夹来分类lora文件。\n文件夹结构应该是这样的：lora/zml。lora里放着lora文件，比如111.safetensors，zml文件夹里放着111.png、111.txt、111.log。\n这真是一个伟大的创意，再次感谢原作者的付出。": "Hello~\nThis LoRA loader node is a modification based on the lora node from ComfyUI-Custom-Scripts, GitHub: https://github.com/pythongosssss/ComfyUI-Custom-Scripts.\nThanks to the original author!\nTo use, create a 'zml' subfolder in your lora directory. Place identically named images, .txt, and .log files inside to read their info. You can preview images by hovering over the LoRA selection.\nDirectory structure example: A lora file at '.../loras/111.safetensors' should have its assets in '.../loras/zml/111.png', etc.\nA great idea, thanks again to the original author.",
        "此节点用于解析LoRA模型文件，并从Civitai.com获取关联的元数据。\n1. 选择一个LoRA模型。\n2. 勾选需要保存的项目（图像、触发词、介绍）。\n3. 运行节点。\n4. 节点会自动计算文件哈希，访问Civitai API，并将获取到的文件保存到LoRA所在目录的 'zml' 子文件夹中。": "This node parses LoRA files and fetches metadata from Civitai.com.\n1. Select a LoRA model.\n2. Check the items you want to save (image, trigger words, description).\n3. Run the node.\n4. It will automatically calculate the hash, query the Civitai API, and save the files into a 'zml' subfolder within the LoRA's directory.",
        "图像/ZML_图像/lora加载器": "image/ZML_Image/lora_loader",
        "lora_名称": "lora_name",
        "保存首张图像": "Save First Image",
        "保存触发词为txt": "Save Trigger Words as .txt",
        "保存介绍为log": "Save Description as .log",
        "图像": "Image",
        "txt": "txt",
        "log": "log",
        "解析": "Parsed Data",
        "help": "help",
        "模型": "MODEL",
        "CLIP": "CLIP",
        "模型_强度": "model_strength",
        "CLIP_强度": "clip_strength",
        "输出_模型": "MODEL_OUT",
        "输出_CLIP": "CLIP_OUT",
        "预览_图": "preview_image",
        "txt_内容": "txt_content",
        "log_内容": "log_content",
        "lora名称": "lora_name",
        "lora权重": "lora_weight",
        "lora_1_名称": "lora_1_name",
        "权重_1_强度": "weight_1_strength",
        "lora_2_名称": "lora_2_name",
        "权重_2_强度": "weight_2_strength",
        "lora_3_名称": "lora_3_name",
        "权重_3_强度": "weight_3_strength",
        "lora_4_名称": "lora_4_name",
        "权重_4_强度": "weight_4_strength",
        "lora_5_名称": "lora_5_name",
        "权重_5_强度": "weight_5_strength",
        "lora名称列表": "lora_list",
        "触发词": "trigger_words",
        "自定义文本": "custom_text",
        "LoRA名称列表": "LoRA_Name_List"
    }
}